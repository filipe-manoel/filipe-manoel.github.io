# Loading the data
Phenotypes = read.csv("Phenotypes.csv")
# As factor
Phenotypes$Genotype = Phenotypes$Genotype %>% as.factor
rm(list=ls())
require(AGHmatrix)
require(BGLR)
require(tidyverse)
require(dplyr)
require(ggplot2)
# Loading the data
Phenotypes = read.csv("Phenotypes.csv")
# As factor
Phenotypes$Genotype = Phenotypes$Genotype %>% as.factor
Phenotypes$Env = Phenotypes$Env %>% as.factor
Phenotypes[,c(1,3:6)] %>%
pivot_longer(., cols = c('Trait1','Trait2','Trait3','Trait4')) %>%
ggplot(., aes(x = Env, y = value)) +
geom_boxplot(color="brown", fill="orange", alpha=0.2) +
theme(strip.text = element_text(face = "bold", size = 20, colour = 'blue'))+
labs(x = 'Environment', title = "Traits (BLUEs) distribution across environments",y="Density")+
facet_wrap(~name,scales = "free")
# Organizing the phenotypic data
Y<- Phenotypes[,c(1,2,3)] %>%
pivot_wider(., names_from = 'Env', values_from = 'Trait1')
# Scale the data
y = scale(Y[,-1])
head(y)
# SNPs
Genotypes = as.matrix(read.csv("Genotypes.csv"))
#Names
rownames(Genotypes)= unique(Phenotypes$Genotype)
# Additive matrix
G.Mat = AGHmatrix::Gmatrix(Genotypes)
###----------- Parameters for the folds
nReps = 5 #change here for more repetitions (10-20 is a good fit)
nFolds = 5 #5 is reasonable, but it depends of or dataset size
###----------- Output for the estimated values
yHatCV=rep(NA,length(phenodata$Trait1))
# Organizing the phenotypic data
head(Phenotypes)
Y<- Phenotypes[Env == 1,c(1:3)]
Y<- Phenotypes[Phenotypes$Env == 1,c(1:3)]
dim(Y)
head(Y)
# Scale the data
y = scale(Y[,3])
head(y)
head(Y)
###----------- Output for the estimated values
yHatCV=rep(NA,length(Y$Trait1))
# Organizing the phenotypic data
head(Phenotypes)
Y<- Phenotypes[Phenotypes$Env == 1,c(1:3)]
head(Y)
# Scale the data
y = scale(Y[,3])
head(y)
###----------- Parameters for the folds
nReps = 5 #change here for more repetitions (10-20 is a good fit)
nFolds = 5 #5 is reasonable, but it depends of or dataset size
###----------- Output for the estimated values
yHatCV=rep(NA,length(Y$Trait1))
pred = data.frame()
###----------- Model
# Phenodata
y = as.matrix(y)
# Time for the loop
set.seed(0928761)
for(Rep in 1:nReps){
folds=sample(1:nFolds,size=length(phenodata$Trait1),replace=T)
for(i in 1:max(folds)){
tst=which(folds==i)
yNA=y
yNA[tst]=NA
# model
fm=BGLR(y=yNA,
ETA=list(list(K=GMat,model='RKHS')),
nIter=1200,
burnIn=120,
verbose = FALSE)
# Predicted values
yHatCV[tst]=fm$yHat[tst]
}
# Accuracy for each fold
pred=rbind(pred,
data.frame(Repetitions = Rep,
Cor=cor(yHatCV, y)))
}
###----------- Parameters for the folds
nReps = 5 #change here for more repetitions (10-20 is a good fit)
nFolds = 5 #5 is reasonable, but it depends of or dataset size
###----------- Output for the estimated values
yHatCV=rep(NA,length(Y$Trait1))
pred = data.frame()
###----------- Model
# Phenodata
y = as.matrix(y)
# Time for the loop
set.seed(0928761)
for(Rep in 1:nReps){
folds=sample(1:nFolds,size=length(Y$Trait1),replace=T)
for(i in 1:max(folds)){
tst=which(folds==i)
yNA=y
yNA[tst]=NA
# model
fm=BGLR(y=yNA,
ETA=list(list(K=GMat,model='RKHS')),
nIter=1200,
burnIn=120,
verbose = FALSE)
# Predicted values
yHatCV[tst]=fm$yHat[tst]
}
# Accuracy for each fold
pred=rbind(pred,
data.frame(Repetitions = Rep,
Cor=cor(yHatCV, y)))
}
# Organizing the phenotypic data
Y<- Phenotypes[Phenotypes$Env == 1,c(1:3)]
# Scale the pheno data
y = scale(Y[,3])
# Additive matrix
GMat = AGHmatrix::Gmatrix(Genotypes)
###----------- Parameters for the folds
nReps = 5 #change here for more repetitions (10-20 is a good fit)
nFolds = 5 #5 is reasonable, but it depends of or dataset size
###----------- Output for the estimated values
yHatCV=rep(NA,length(Y$Trait1))
pred = data.frame()
###----------- Model
# Phenodata
y = as.matrix(y)
# Time for the loop
set.seed(0928761)
for(Rep in 1:nReps){
folds=sample(1:nFolds,size=length(Y$Trait1),replace=T)
for(i in 1:max(folds)){
tst=which(folds==i)
yNA=y
yNA[tst]=NA
# model
fm=BGLR(y=yNA,
ETA=list(list(K=GMat,model='RKHS')),
nIter=1200,
burnIn=120,
verbose = FALSE)
# Predicted values
yHatCV[tst]=fm$yHat[tst]
}
# Accuracy for each fold
pred=rbind(pred,
data.frame(Repetitions = Rep,
Cor=cor(yHatCV, y)))
}
## Mean for the correlation
mean(pred$Cor)
Y<- Phenotypes[,c(1,2,3)] %>%
pivot_wider(., names_from = 'Env', values_from = 'Trait1')
# Scale the data
y = scale(Y[,-1])
head(y)
